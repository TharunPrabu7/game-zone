{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nlet FilterComponent = class FilterComponent {\n  gameService;\n  filters = {\n    genre: '',\n    tag: '',\n    developer: '',\n    publisher: '',\n    pageNo: 0,\n    pageSize: 10\n  };\n  games = [];\n  loading = false;\n  error = '';\n  constructor(gameService) {\n    this.gameService = gameService;\n  }\n  applyFilters() {\n    this.loading = true;\n    this.error = '';\n    this.games = [];\n    let endpoint = '';\n    let queryParam = '';\n    // Determine which filter is active\n    if (this.filters.genre) {\n      endpoint = 'by-genre-page';\n      queryParam = `genre=${this.filters.genre}`;\n    } else if (this.filters.tag) {\n      endpoint = 'by-tag-page';\n      queryParam = `tag=${this.filters.tag}`;\n    } else if (this.filters.developer) {\n      endpoint = 'by-developer-page';\n      queryParam = `developer=${this.filters.developer}`;\n    } else if (this.filters.publisher) {\n      endpoint = 'by-publisher-page';\n      queryParam = `publisher=${this.filters.publisher}`;\n    } else {\n      this.loading = false;\n      this.error = 'Please enter at least one filter.';\n      return;\n    }\n    const url = `/api/game/${endpoint}?${queryParam}&pageNo=${this.filters.pageNo}&pageSize=${this.filters.pageSize}`;\n    this.gameService.getFilteredGames(url).subscribe({\n      next: response => {\n        this.games = response.content || response; // Handles both paginated and plain arrays\n        this.loading = false;\n      },\n      error: err => {\n        console.error(err);\n        this.error = 'Failed to fetch games. Please try again.';\n        this.loading = false;\n      }\n    });\n  }\n};\nFilterComponent = __decorate([Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html'\n})], FilterComponent);\nexport { FilterComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}