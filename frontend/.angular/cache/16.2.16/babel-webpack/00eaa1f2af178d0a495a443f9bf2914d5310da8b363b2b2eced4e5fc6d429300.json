{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../shared/game.service\";\nimport * as i3 from \"@angular/router\";\nlet GameFormComponent = /*#__PURE__*/(() => {\n  class GameFormComponent {\n    fb;\n    gameService;\n    router;\n    route;\n    form;\n    editMode = false;\n    gameId = null;\n    constructor(fb, gameService, router, route) {\n      this.fb = fb;\n      this.gameService = gameService;\n      this.router = router;\n      this.route = route;\n      this.form = this.fb.group({\n        name: [''],\n        metacritic: [''],\n        released_date: ['']\n      });\n    }\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        if (params['id']) {\n          this.editMode = true;\n          this.gameId = +params['id'];\n          this.gameService.getGameDetails(this.gameId).subscribe(game => {\n            this.form.patchValue(game);\n          });\n        }\n      });\n    }\n    onSubmit() {\n      if (this.editMode && this.gameId != null) {\n        this.gameService.updateGame(this.gameId, this.form.value).subscribe(() => {\n          this.router.navigate(['/games']);\n        });\n      } else {\n        this.gameService.addGame(this.form.value).subscribe(() => {\n          this.router.navigate(['/games']);\n        });\n      }\n    }\n    static ɵfac = function GameFormComponent_Factory(t) {\n      return new (t || GameFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.GameService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GameFormComponent,\n      selectors: [[\"app-game-form\"]],\n      decls: 9,\n      vars: 3,\n      consts: [[1, \"max-w-lg\", \"mx-auto\", \"mt-10\", \"p-6\", \"bg-white\", \"rounded-2xl\", \"shadow\"], [1, \"text-xl\", \"font-bold\", \"mb-4\"], [1, \"space-y-4\", 3, \"formGroup\", \"ngSubmit\"], [\"placeholder\", \"Name\", \"formControlName\", \"name\", 1, \"w-full\", \"p-2\", \"border\", \"rounded\"], [\"placeholder\", \"Metacritic Score\", \"formControlName\", \"metacritic\", 1, \"w-full\", \"p-2\", \"border\", \"rounded\"], [\"placeholder\", \"Released Date\", \"formControlName\", \"released_date\", 1, \"w-full\", \"p-2\", \"border\", \"rounded\"], [\"type\", \"submit\", 1, \"w-full\", \"bg-blue-600\", \"text-white\", \"py-2\", \"rounded\"]],\n      template: function GameFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function GameFormComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelement(4, \"input\", 3)(5, \"input\", 4)(6, \"input\", 5);\n          i0.ɵɵelementStart(7, \"button\", 6);\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.editMode ? \"Edit Game\" : \"Add Game\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate1(\" \", ctx.editMode ? \"Update Game\" : \"Add Game\", \" \");\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      encapsulation: 2\n    });\n  }\n  return GameFormComponent;\n})();\nexport { GameFormComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}